name: 6 - Release - Feature

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  download_actions:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Running deploy script..."
          echo "${{ toJSON(github) }}"
          echo "${{ toJSON(github.event) }}"

  deploy_dev:
    name: Deploy Development
    if: inputs.environment == 'development'
    runs-on: ubuntu-latest
    needs: download_actions
    environment:
      name: development
      url: https://tiagoboeing.com
    steps:
      - run: echo "Running deploy script..."

  deploy_homolog:
    name: Deploy Development
    if: inputs.environment == 'homolog'
    runs-on: ubuntu-latest
    needs: download_actions
    environment:
      name: development
      url: https://tiagoboeing.com
    steps:
      - run: echo "Running deploy script..."

  deploy:
    if: "!startsWith(github.ref, 'refs/heads/hotfix/')"
    runs-on: ubuntu-latest
    needs: download_actions
    environment:
      name: ${{ inputs.environment }}
      url: https://${{ inputs.environment }}.tiagoboeing.com
    steps:
      - run: echo "Running deploy script to ${{ inputs.environment }} environment..."

  deploy_staging:
    if: startsWith(github.ref, 'refs/heads/hotfix/') && inputs.environment == 'staging'
    runs-on: ubuntu-latest
    needs: download_actions
    environment:
      name: ${{ inputs.environment }}
      url: https://${{ inputs.environment }}.tiagoboeing.com
    steps:
      - run: echo "Running deploy script to ${{ inputs.environment }} environment..."

  # Deploy and start test flow
  deploy_homolog:
    if: inputs.environment == 'development'
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: homolog
      url: https://tiagoboeing.com
    steps:
      - run: echo "Running deploy script to ${{ inputs.environment }} environment..."

  create_release:
    if: |
      always() && 
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled') && 
      (needs.deploy_homolog.result != 'skipped' || 
      needs.deploy_staging.result != 'skipped')
    runs-on: ubuntu-latest
    needs: [deploy, deploy_homolog, deploy_staging]
    environment:
      name: production
      url: https://tiagoboeing.com
    steps:
      - run: echo "Run release/tag/changelog script..."

  deploy_production:
    if: |
      always() && 
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled') && 
      (needs.deploy_homolog.result != 'skipped' || 
      needs.deploy_staging.result != 'skipped')
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - run: echo "Running deploy script to production environment..."

  merge_branches:
    if: |
      always() && 
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled') && 
      (needs.deploy_homolog.result != 'skipped' || 
      needs.deploy_staging.result != 'skipped')
    runs-on: ubuntu-latest
    needs: deploy_production
    steps:
      - run: echo "Merge to master and develop."

  sync_envs:
    if: |
      always() && 
      !contains(needs.*.result, 'failure') && 
      !contains(needs.*.result, 'cancelled') && 
      (needs.deploy_homolog.result != 'skipped' || 
      needs.deploy_staging.result != 'skipped')
    runs-on: ubuntu-latest
    needs: deploy_production
    steps:
      - run: echo "Sync environments."
